{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","propType","PropTypes","string","func","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78b9340d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    return  <button onClick={onClick} style={{backgroundColor : color}} className='btn'>{text}</button>\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.propType = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button","import Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    return(\r\n        <header className='header'>\r\n            <h1>{'Task Tracker'}</h1>\r\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import { FaTimes } from 'react-icons/fa';\r\nconst Task = ({ task, onDelete, onToggle })=>{\r\n    return(\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={()=>onToggle(task.id)}>\r\n            <h3>{task.text}{' '} <FaTimes style={{color: 'red', cursor: 'pointer'}} onClick={()=>onDelete(task.id)} /> </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task","import Task from \"./Task\"\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return(\r\n        <>\r\n            {tasks.map((task) => (\r\n                <Task key={task.id} task = {task} onDelete = {onDelete} onToggle = {onToggle}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks","import { useState } from \"react\";\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit= (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(!text){\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n    return(\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task' value={text} onChange={(e)=> setText(e.target.value)} />\r\n            </div>\r\n\r\n            <div className='form-control'>\r\n                <label>Day and Time</label>\r\n                <input type='text' placeholder='Add Day and Time' value={day} onChange={(e)=> setDay(e.target.value)}/>\r\n            </div>\r\n\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox' checked={reminder} placeholder='Add Task' value={reminder} onChange={(e)=> setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n\r\n            <input type='submit' value='Save Task' className='btn btn-block' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask","import { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\n\nfunction App() {\n  const[showAddTask, setShowAddTask] = useState(false)\n\n\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Doctors Appointment\",\n      day: \"Feb 5th at 2:30pm\",\n      reminder: true\n    },\n    {\n      id: 2,\n      text: \"Meeting at School\",\n      day: \"Feb 6th at 1:30pm\",\n      reminder: true\n    }\n  ])\n\n  //delete task\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter(task => task.id !== id))\n  }\n\n  //toggle reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task)=> task.id === id ? {...task, reminder : !task.reminder} : task)\n    )\n      \n  }\n\n  //add task\n  const addTask = (task)=>{\n    const id = Math.floor(Math.random() * 100000) + 1\n\n    const newTask = {id, ...task}\n\n    setTasks([...tasks, newTask])\n  }\n  \n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? (\n      <Tasks tasks = {tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n      )\n      :(\n      'No tasks to show'\n\n      )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}